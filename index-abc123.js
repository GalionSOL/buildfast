// Copy this as-isâ€”represents the bundled output
const e=new function(){this.Buffer=Buffer}().Buffer,t=new Connection("https://api.devnet.solana.com","confirmed"),n=new PublicKey("5YTG39q61XTnsTWGcj7gAXfrcuoFjvb78yCNRE7NvNEs");function o(e){document.querySelectorAll(".screen").forEach((t=>t.classList.remove("active"))),document.getElementById(e).classList.add("active")}let c=!1,i;document.getElementById("logo").addEventListener("click",(()=>o("homepage"))),document.getElementById("launch-now").addEventListener("click",(()=>o("launch-setup"))),document.getElementById("profile-btn").addEventListener("click",(()=>o("profile"))),document.getElementById("project-card").addEventListener("click",(()=>o("project-detail"))),document.getElementById("vote-btn").addEventListener("click",(()=>o("voting"))),document.getElementById("connect-wallet").addEventListener("click",(async()=>{if(window.solana&&window.solana.isPhantom)try{const e=await window.solana.connect();i=e.publicKey,c=!0,console.log("Connected:",i.toString()),alert("Connected: "+i.toString())}catch(e){console.error("Connect failed:",e),alert("Failed to connect: "+e.message)}else alert("Please install Phantom Wallet!")})),document.getElementById("launch-form").addEventListener("submit",(e=>{e.preventDefault(),alert("Minting Project... (Mock)"),o("homepage")})),document.getElementById("vote-yes").addEventListener("click",(()=>alert("Voted Yes! (Mock)"))),document.getElementById("vote-no").addEventListener("click",(()=>alert("Voted No! (Mock)"))),document.getElementById("profile-form").addEventListener("submit",(e=>{e.preventDefault(),alert("Profile Updated! (Mock)")})),document.getElementById("mint-nft").addEventListener("click",(async()=>{if(!c||!i)return void alert("Please connect your wallet first!");try{console.log("Minting started...");const o=new Transaction().add(SystemProgram.transfer({fromPubkey:i,toPubkey:n,lamports:.1*LAMPORTS_PER_SOL})),{blockhash:c}=await t.getLatestBlockhash();o.recentBlockhash=c,o.feePayer=i,console.log("Signing transaction...");const r=await window.solana.signTransaction(o);console.log("Sending transaction...");const s=await t.sendRawTransaction(r.serialize());console.log("Confirming transaction..."),await t.confirmTransaction(s),alert("Minted 1 NFT! Signature: "+s),console.log("Mint success:",s)}catch(e){console.error("Mint failed:",e),alert("Mint failed: "+e.message)}}));
